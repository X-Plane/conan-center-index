diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8345623..281fb3c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -23,10 +23,16 @@ else()
 endif()
 
 option(ZSTD "ZSTD support for KTX2 transcoding/encoding" TRUE)
+option(ENABLE_ENCODER "Enable encoding" TRUE)
 option(OPENCL "OpenCL support in encoder" FALSE)
 
+if (NOT ENABLE_ENCODER)
+    set(OPENCL FALSE)
+endif()
+
 message("Initial BUILD_X64=${BUILD_X64}")
 message("Initial CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")
+message("Initial ENABLE_ENCODER=${ENABLE_ENCODER}")
 message("Initial SSE=${SSE}")
 message("Initial ZSTD=${ZSTD}")
 message("Initial OPENCL=${OPENCL}")
@@ -138,6 +144,9 @@ else()
 endif()
 
 # Define the source files for the static library
+set(TRANSCODER_LIB_SRC_LIST
+    transcoder/basisu_transcoder.cpp
+)
 set(ENCODER_LIB_SRC_LIST
     encoder/basisu_backend.cpp
     encoder/basisu_basis_file.cpp
@@ -164,18 +173,23 @@ set(ENCODER_LIB_SRC_LIST
 
 if (ZSTD)
     set(ENCODER_LIB_SRC_LIST ${ENCODER_LIB_SRC_LIST} zstd/zstd.c)
+    set(TRANSCODER_LIB_SRC_LIST ${TRANSCODER_LIB_SRC_LIST} zstd/zstd.c)
 endif()
 
 # Create the static library
-add_library(basisu_encoder STATIC ${ENCODER_LIB_SRC_LIST})
+add_library(basisu_transcoder STATIC ${TRANSCODER_LIB_SRC_LIST})
+if (ENABLE_ENCODER)
+    target_sources(basisu_transcoder PRIVATE ${ENCODER_LIB_SRC_LIST})
+endif()
 
+if (ENABLE_ENCODER)
 # Create the basisu executable and link against the static library
 add_executable(basisu basisu_tool.cpp)
-target_link_libraries(basisu PRIVATE basisu_encoder)
+target_link_libraries(basisu PRIVATE basisu_transcoder)
 
 # Create the new example executable and link against the static library
 add_executable(examples example/example.cpp)
-target_link_libraries(examples PRIVATE basisu_encoder)
+target_link_libraries(examples PRIVATE basisu_transcoder)
 
 if (ZSTD)
     target_compile_definitions(basisu PRIVATE BASISD_SUPPORT_KTX2_ZSTD=1)
@@ -193,7 +207,7 @@ if (NOT MSVC)
         
         target_include_directories(basisu PRIVATE ${OpenCL_INCLUDE_DIRS})
         target_include_directories(examples PRIVATE ${OpenCL_INCLUDE_DIRS})
-		target_include_directories(basisu_encoder PRIVATE ${OpenCL_INCLUDE_DIRS})
+		target_include_directories(basisu_transcoder PRIVATE ${OpenCL_INCLUDE_DIRS})
         set(BASISU_EXTRA_LIBS ${OpenCL_LIBRARIES})
     endif()
 else()
@@ -204,7 +218,7 @@ else()
         
         target_include_directories(basisu PRIVATE "OpenCL")
         target_include_directories(examples PRIVATE "OpenCL")
-		target_include_directories(basisu_encoder PRIVATE "OpenCL")
+		target_include_directories(basisu_transcoder PRIVATE "OpenCL")
 
         if (BUILD_X64)
             target_link_libraries(basisu PRIVATE "${CMAKE_SOURCE_DIR}/OpenCL/lib/OpenCL64.lib")
@@ -252,3 +266,4 @@ if (MSVC)
         RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
     )	
 endif()
+endif()
